# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    errorHandlerChain:
        - SimplePayment\Framework\Exception\Infrastructure\Handler\NotFoundHttpErrorHandler
        - SimplePayment\Framework\Exception\Infrastructure\Handler\SymfonyMessengerErroUnpacker
        - SimplePayment\Framework\Exception\Infrastructure\Handler\ValidationFailedErrorHandler
        - SimplePayment\Framework\Exception\Infrastructure\Handler\LcobucciErrorHandler
        - SimplePayment\Framework\Exception\Infrastructure\Handler\DebugErrorHandler
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    SimplePayment\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
    
    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    SimplePayment\Core\Infrastructure\Delivery\:
        resource: '../src/Core/Infrastructure/Delivery'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
        # Exception Listener
    SimplePayment\Framework\Exception\Domain\ErrorListener:
        class: SimplePayment\Framework\Exception\Infrastructure\Listener\SymfonyExceptionListener
        arguments:
            $errorHandlers: '%errorHandlerChain%'
        tags:
            - { name: kernel.event_listener, event: kernel.exception } 
    
    payment_received.domain_event_subscriber:
        class: SimplePayment\Core\Domain\Event\PaymentReceivedSubscriber
    
    SimplePayment\Framework\DomainEvent\Domain\DomainEventPublisher:
        arguments:
            $subscribers: ['@payment_received.domain_event_subscriber']

    Doctrine\Persistence\ObjectManager: '@doctrine.orm.default_entity_manager'
    Doctrine\Common\Persistence\ObjectManager: '@doctrine.orm.default_entity_manager'

    SimplePayment\Core\Domain\UserRepository:
        class:  SimplePayment\Core\Infrastructure\Persistence\DoctrineUserRepository
    
    # GuzzleClient
    GuzzleHttp\Client:
        class: 'GuzzleHttp\Client'